<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AZVW3gAAAABJRU5ErkJggg==
</value>
  </data>
</root>